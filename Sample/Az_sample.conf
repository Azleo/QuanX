# Az修改 - 2023/11/19

# 基于Sample Quantumult Configuration (v1.0.19)

# https://github.com/crossutility/Quantumult-X/blob/master/sample.conf
# 以 ";" 或 "#" 或 "//" 开头的行为注释行

# > 建议在「其他设置」里「GeoLite2」的「来源」填写使用下面链接「任选一个」，并开启「自动更新」
# https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb
# https://github.com/Hackl0us/GeoIP2-CN/raw/release/Country.mmdb

# > QuantumultX图标库订阅，打开以下URL，手机端点击图片即可快捷添加「1.0.30+」
; https://github.com/ddgksf2013/Icon/blob/master/README.md

[general]

;profile_img_url=http://www.example.com/example.png

# 资源解析器
# 可用于自定义各类远程资源的转换，如节点，规则 filter，复写 rewrite 等，url 地址可远程，可 本地/iCloud(Quantumult X/Scripts目录)。
resource_parser_url=https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/resource-parser.js
# resource_parser_url 示例可以在以下网站找到 https://raw.githubusercontent.com/crossutility/Quantumult-X/master/resource-parser.js

# 网络测试链接
network_check_url = http://www.bing.com
# 服务器测试链接
#可以在 server_local/remote 中，为节点、订阅单独指定server_check_url参数。指定后其会用自己的 server_check_url 代替 [general] 中的 server_check_url。
# 闪电图标表示TCP快速打开成功。
;server_check_url=http://www.google.com/generate_204
;server_check_url=http://www.gstatic.com/generate_204
;server_check_url=http://www.qualcomm.cn/generate_204
server_check_url=http://cp.cloudflare.com/generate_204
# Quantumult 使用 HTTP HEAD 方法对测试网址 server_check_url 进行网页响应性测试（测试结果为通过该节点访问此网页获得 HTTP 响应所需要的时间），来确认节点的可用性。
# 测试结果第一项为节点TCP 握手，第二项为通过对应节点访问测试网页的HTTP 延迟，即HTTP响应时间与HTTP请求发起时间的插值。测试总耗时还包含除了第一项、第二项意外的时间开销，例如可能的TLS握手以及代理协议相关握手过程的开销。
# Quantumult X 主应用主动发起的测试的网络请求不会经由Quantumult X Tunnel（VPN），Quantumult X 主应用主动发起的测试的相关DNS也不会被Quantumult XTunnel （VPN）DNS模块处理。
# Quantumult 界面中的延迟测试方式均为网页响应性测试，显示的最终延迟均为通过对应节点访问测试网页获得 HTTP 响应所需要时间。
# 由于 Trojan 协议为无响应校验协议，使得 HTTP 检测方式即使获得了 HTTP 响应，也不代表节点一定可用。

# geo_location_checker用于节点页面的节点信息展示，可完整自定义展示内容与方式。
geo_location_checker = http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IP_API.js
;geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/Orz-3/Orz-3/master/QuantumultX/IP.js
# extreme-ip-lookup为Quantumult X 作者提供的示范 api
# geo_location_checker=http://extreme-ip-lookup.com/json/, https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-location-with-script.js

# 运行模式触发开关
# running_mode_trigger根据网络自动切换 分流/直连/全局代理 等模式.与手动切换 分流/直连/全局代理 等效。比 ssid 策略组设置简单，比ssid-suspend 更灵活。
# Rewrite 及 Task 模块始终生效。
# filter - 规则分流，all_proxy - 全部代理，all_direct - 全部直连
# 示例顺序：[蜂窝数据],[Wi-Fi],[SSID1],[SSID2]
;running_mode_trigger=filter, filter, LINK_22E171:all_proxy, LINK_22E172:all_direct
# 上面示例的意思为：在蜂窝数据使用规则分流(第一个 filter)，在 Wi-Fi 使用规则分流(第二个 filter)，在 SSID 为 LINK_22E171 的 Wi-Fi 使用全部代理(all_proxy)，在 SSID 为 LINK_22E172 的 Wi-Fi 使用全部直连(all_direct)

# DNS排除列表
# dns_exclusion_list中的域名将不使用fake-ip方式. 其它域名则全部采用 fake-ip 及resolve-on-remote（远程解析）的模式
dns_exclusion_list=*.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me
# 可一定程度防止检测到使用代理
;dns_exclusion_list = *.lan, cable.auth.com, *.msftconnecttest.com, *.msftncsi.com, network-test.debian.org, detectportal.firefox.com, resolver1.opendns.com, *.srv.nintendo.net, *.stun.playstation.net, xbox.*.microsoft.com, *.xboxlive.com, stun.*, *.qq.com, localhost.*.qq.com, *.logon.battlenet.com.cn, *.logon.battle.net, *.blzstatic.cn, *.cmpassport.com, id6.me, open.e.189.cn, mdn.open.wo.cn, auth.wosms.cn, *.jegotrip.com.cn, *.icitymobile.mobi, *.pingan.com.cn, *.cmbchina.com, *?miwifi.com, pool.ntp.org, *.pool.ntp.org, ntp.*.com, time.*.com, ntp?.*.com, time?.*.com, time.*.gov, time.*.edu.cn, *.ntp.org.cn, time.*.apple.com, PDC._msDCS.*.*, DC._msDCS.*.*, GC._msDCS.*.*

# (google翻译)dns_exclusion_list 包含禁用占位符 IP(240.*) 的域，不在 dns_exclusion_list 中的域都启用了占位符 IP，并打开了远程解析设置。

# SSID 挂起列表
# ssid_suspended_list 让 Quantumult X 在特定 SSID 网络下暂停工作(task 模块会继续工作)，多个Wi-Fi用“,”连接
;ssid_suspended_list=LINK_22E174, LINK_22E175

# UDP 白名单
# 留空代表所有端口均在udp_whitelist内。目标端口不在udp_whitelist列表中的UDP 数据包（通过 Quantumult X Tunnel接口）将被丢弃处理（返回 ICMP  “端口不可达” 信息）。此设置与策略无关，也与代理（服务器）端口无关。
;udp_whitelist=53, 123, 1900, 80-443
;udp_whitelist=53, 80-427, 444-65535
udp_whitelist = 1-442, 444-65535
# 参数 udp_whitelist 从 IP 层控制 UDP 数据是否需要舍弃；如舍弃，则该 UDP 请求不会进入规则模块以及策略模块，TCP/UDP 请求记录中也不会有相应的条目，但仍可在日志中查询到相关信息（日志等级 debug）。
# 该参数控制的是流入 Quantumult X Tunnel 的请求，并非 Quantumult X Tunnel 发出的请求，即不会作用于节点所使用的 UDP 目标端口。

# 后备 UDP 策略
# 参数 fallback_udp_policy 仅支持 v1.0.19+。
# 参数 fallback_udp_policy 的值仅支持末端策略（末端策略为经由规则模块和策略模块后所命中的策略，例如：direct、reject 以及节点；不支持内置策略 proxy 以及其它自定义策略）。该参数默认值为 reject。
;fallback_udp_policy=reject
# 当 UDP 请求经过规则模块以及策略模块后所命中的节点为 Quantumult X 所不支持 UDP 转发的节点（例如：VMess），或支持 UDP 转发但未注明 udp-relay=true 的节点（例如：SS 或 SSR 且与服务器是否真实开启了 UDP 转发无关），则 fallback_udp_policy 会被使用。
# 注意：如果您需要调整该参数的值为 direct，请务必清楚了解同一目标主机名 TCP 请求与 UDP 请求的源地址不同所造成的隐私及安全风险。

# 排除路线
# Quantumult 将不会处理到 excluded_routes 的流量。修改后最好重新启动您的设备。
excluded_routes=192.168.0.0/16, 172.16.0.0/12, 100.64.0.0/10, 10.0.0.0/8, 239.255.255.250/32
# Hearthstone: 24.105.30.129/32, 185.60.112.157/32, 185.60.112.158/32, 182.162.132.1/32

;icmp_auto_reply=true

# 兼容性增强SSID列表
# APP中其他设置中的全局选项“兼容性增强”选项关闭时，将使用该列表。
;enhanced_compatibility_ssid_list = LINK_22E174, LINK_22E175

[dns]

# 禁用系统 DNS
;no-system
# 注意：如配置了 no-system，则请务必确保在忽略了部分自定义 DNS 的配置下至少有一个可用的自定义 DNS 配置。

# 禁用 ipv6
;no-ipv6
# 当设置「no-ipv6」时，Quantumult X Tunnel 的 DNS 模块会直接让 AAAA 查询失败，但仍允许来自 IPv6 DNS 服务器的 A 查询。

# 使用 DNS over HTTP/3
;prefer-doh3

# 参数 excluded_ssids/included_ssids指定在特定SSID下失效/生效
;server = 8.8.8.8:53, excluded_ssids=SSID1
;server = 8.8.4.4:53, included_ssids=SSID2

# 自定义DNS服务器
server = 223.5.5.5
server = 119.29.29.29
server = 223.6.6.6
;server = 114.114.114.114
;server=202.141.176.93
;server=202.141.178.13
;server = 8.8.8.8
;server=8.8.4.4

# DNS over HTTPS
# 当 DoH 服务器被设置时，所有其他普通的（没有与之相关的特定域）服务器将被忽略。
# 当设置了多个 DoH 服务器时，仅第一个会被使用。
# 支持多个 DoH 并发，需配置在同一行
;doh-server=xx1.com,xx2.com,excluded_ssids=SSID1, SSID2
;doh-server = https://doh.pub/dns-query, https://223.5.5.5/dns-query, https://223.6.6.6/dns-query
# 阿里DoH
;doh-server=https://dns.alidns.com/dns-query
;doh-server=https://223.5.5.5/dns-query
# 腾讯DoH
;doh-server=https://doh.pub/dns-query
;doh-server=https://1.12.12.12/dns-query
# Google DoH
;doh-server=https://8.8.8.8/dns-query
;doh-server=https://8.8.4.4/dns-query
# 当使用的 DoH 服务器不是基于 HTTP/2 时，DoH 将被暂时禁用，并使用常规服务器，直到下次启动 VPN 连接。

# 不建议在与防火墙相关的网络环境中使用，不确定 DoH 服务器是否总能被到达。
# 如果 DoH 服务器在您的国家或地区不是流行的 DNS 服务器，则不推荐使用，它可能会丢失 ISP DNS 服务器返回的 CDN 优化结果。
# 如果 DoH 服务器是一个反广告相关的服务器，则不推荐使用（Quantumult X 过滤模块对于被拒绝的域具有更好的性能，它可以避免客户端无休止的请求）。

# 如指定了 DoQ 服务，则 DoH 以及其它 dns解析均失效。
;doq-server = quic://dns1.example.com, quic://dns2.example.com
;doq-server = quic://dns.adguard.com, excluded_ssids=SSID1
;doq-server = quic://dns.adguard.com, included_ssids=SSID2

# 支持 alias 映射
# 映射域名到其它域名
;alias=/example7.com/another-example.com

# 本地 DNS 映射
address=/raw.githubusercontent.com/185.199.110.133
address=/mtalk.google.com/108.177.125.188
;address=/example5.com/192.168.16.18
;address=/example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]
server=/dl.google.com/119.29.29.29
server=/dl.l.google.com/119.29.29.29
server=/update.googleapis.com/119.29.29.29
server=/router.synology.com/system
server=/routerlogin.net/system
server=/myrouter.local/system
server=/*.asus.com/system
server=/*.miwifi.com/system
server=/*.tplogin.cn/system
server=/*.tplinklogin.net/system
;server=/example0.com/system
;server=/example1.com/8.8.4.4
;server=/*.example2.com/223.5.5.5
;server=/example4.com/[2001:4860:4860::8888]:53
# 不允许在此为域名直接设置127.0.0.1。 
# 如果您希望某个域名（例如：example.com）为127.0.0.1，只需在 “filter_local” 部分添加 “host, example.com, reject” 即可。拒绝操作将返回 127.0.0.0.1 的 DNS 响应。

# 查询结果只用于评估过滤器或通过直接策略连接，当通过服务器连接时，查询结果不会被使用，Quantumult 永远不会知道相关域名的目标 IP。

[policy]

# img-url 参数用于指定策略组图标，可远程，也可本地/iCloud(Quantumult X/Images路径下) （108*108 大小）img-url=http://example.com/icon.png

# 静态（static）
# 指向您手动选择的候选服务器。
;static = policy-name-1, Sample-A, Sample-B, Sample-C, img-url=http://example.com/icon.png

# 可用（available）
# 指向候选服务器中的第一个可用服务器(当策略被触发且策略结果不可用时，将立即启动并发 url 延迟测试。
# 如果当时没有网络请求接受策略，这意味着策略处于空闲状态，即使服务器关闭，测试也不会启动。那时，您可以通过手动启动测试来更新服务器状态，但是这没有任何意义)。
;available = policy-name-2, Sample-A, Sample-B, Sample-C

# 循环（round-robin）
# 指向在候选服务器中指向下一个服务器以进行下一次连接。
# 按列表顺序轮流使用其中的服务器
;round-robin = policy-name-3, Sample-A, Sample-B, Sample-C

# 延迟(url-latency-benchmark)
# 指向具有最佳 URL 延迟(公差，单位毫秒)结果的服务器。
# check-interval(检查间隔)单位为秒，当此策略已经被任何请求激活时考虑该间隔。
# alive-checking参数，无使用情况下亦进行检测切换。
# tolerance为容忍度参数，默认值为100（单位为毫秒）当新测试的最佳策略比原选中策略的延迟差大于容忍度时，才会切换至新的策略。
;url-latency-benchmark = policy-name-9, resource-tag-regex=^sample, server-tag-regex=^example, check-interval=600, alive-checking=false, tolerance=0
# 手动启动 URL 测试时，策略结果也会被更新。

# 哈希值（dest-hash）
# 根据使用目标地址（域或 IP）作为输入的哈希函数指向服务器。 此策略对于需要会话持久性的用例特别有用。 从策略中添加或删除服务器可能会更改结果。
;dest-hash = policy-name-8, resource-tag-regex=^sample, server-tag-regex=^example

# SSID
# 根据网络环境自动切换节点/策略组。
;ssid=policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C

# "tag" 跟 "enabled" 为可选参数，分别表示 “标签”及“开启状态”, true 为开启，false 关闭。

# opt-parser=true/false 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器。

# update-interval 为更新时间参数，单位 秒, 默认更新时间为86400 秒，也就是24小时，设置为负数表示禁用自动同步。

# server-tag-regex 以及 resource-tag-regex 参数用于正则筛选来建立策略组，仅适用于 static、available 和 round-robin 类型的策略。
# 教程部分: https://shrtm.nu/DAFP

#正则表达式范例

# 所有节点列表
# server-tag-regex=.*

# 特殊节点
# server-tag-regex=^(?!.*(港|台|日|韩|坡|美|HK|TW|JP|KR|SG|US|Hong|Tai|Japan|Korea|Singapore|States))

# 香港
# server-tag-regex=(?=.*(港|HK|(?i)Hong))^((?!(台湾|日本|新加坡|美国|韩国|狮城|南朝鲜|US|SG|JP|KR|TW|台灣|美國|韓國|獅城)).)*$

# 台湾
# server-tag-regex=(?=.*(台|TW|(?i)Taiwan))^((?!(香港|日本|新加坡|美国|韩国|狮城|南朝鲜|US|SG|JP|KR|HK|美國|韓國|獅城)).)*$

# 日本
# server-tag-regex=(?=.*(日本|JP|(?i)Japan))^((?!(香港|台湾|新加坡|美国|韩国|狮城|南朝鲜|US|SG|KR|HK|TW|台灣|美國|韓國|獅城)).)*$

# 韩国
# server-tag-regex=(?=.*(KR|Korea|KOR|首尔|韩|韓|(?i)Korea))^((?!(香港|台湾|新加坡|美国|狮城|南朝鲜|US|SG|HK|TW|台灣|美國|獅城)).)*$

# 新加坡
# server-tag-regex=(?=.*(新加坡|狮城|SG|(?i)Singapore))^((?!(香港|台湾|日本|美国|韩国|南朝鲜|US|JP|KR|HK|TW|台灣|美國|韓國)).)*$

# 美国
# server-tag-regex=(?=.*(美国|美國|US|洛杉矶|西雅图|(?i)States|American))^((?!(香港|台湾|日本|新加坡|韩国|狮城|南朝鲜|SG|JP|KR|HK|TW|台灣|韓國|獅城)).)*$

static=🚀节点选择, 👍手动切换, direct, ♻️自动选择, server-tag-regex=.*
static=👍手动切换, direct, server-tag-regex=.*
url-latency-benchmark=♻️自动选择, server-tag-regex=.*, check-interval=600, tolerance=80, img-url=https://raw.githubusercontent.com/Orz-3/mini/master/Color/Urltest.png
;static=🍎苹果服务, direct, 🚀节点选择, server-tag-regex=.*
;static=🐧腾讯, direct, 🚀节点选择, server-tag-regex=.*
;static = 🇨🇳国内网站, direct, 🚀节点选择, server-tag-regex=.*
static=📺国际媒体, 🚀节点选择, ♻️自动选择, direct, server-tag-regex=.*
static=🌍国外网站, 🚀节点选择, ♻️自动选择, direct, server-tag-regex=.*
static =🐟漏网之鱼, 🚀节点选择, direct, server-tag-regex=.*

[server_remote]

#服务器远程订阅
#远程服务器订阅模块，可直接订阅SSR，SS链接，以及Quantumult X格式的vmess/trojan/https订阅
#其它格式可用 opt-parser 参数开启解析器导入使用

#
;
#

#  _    _   ______   _____    ______   _ 
# | |  | | |  ____| |  __ \  |  ____| | |
# | |__| | | |__    | |__) | | |__    | |
# |  __  | |  __|   |  _  /  |  __|   | |
# | |  | | | |____  | | \ \  | |____  |_|
# |_|  |_| |______| |_|  \_\ |______| (_)
#     

# "tag" 、"force-policy"和 "enabled" 为可选参数，分别表示 “标签”、“强制策略”和“开启状态”。
# update-interval 为更新时间参数，单位 秒, 默认更新时间为 24*60*60=86400 秒，负数表示禁用自动同步。
# opt-parser 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器。
# 如果设置了 require-devices，则仅当当前 Quantumult 设备 ID 属于 require-devices 时才会加载此行配置。 Quantumult 设备 ID 可以在“设置 - 其他设置 - 关于”中找到。
# 当存在force-policy时，远程资源过滤器中的策略将被忽略，而强制使用该force-policy。

;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/server.txt, opt-parser=true, update-interval=86400, tag=Sample-01

[filter_remote]

# 远程分流规则订阅

# 远程分流模块，可使用force-policy来强制使用策略偏好, 替换远程规则内所指定的策略组，亦可用于设置多条规则指向同一策略。
# 参数 “tag”、“force-policy”和“enabled”是可选的。
# opt-parser=true/false 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器;

;https://example.com/filter.snippet, tag=Sample, force-policy=your-policy-name,enabled=true

# 修正直连
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Direct/Direct.list, tag=✏️直连修正, force-policy=direct, update-interval=86400, opt-parser=false, enabled=true
# 去广告Lite
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/AdvertisingLite/AdvertisingLite.list, tag=🛑去广告Lite, force-policy=reject, update-interval=86400, opt-parser=false, enabled=true
# 反劫持
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Hijacking/Hijacking.list, tag=🛑反劫持, force-policy=reject, update-interval=86400, opt-parser=false, enabled=true
# 隐私保护
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Privacy/Privacy.list, tag=🛑隐私保护, force-policy=reject, update-interval=86400, opt-parser=false, enabled=true
# Apple
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Apple/Apple.list, tag=🍎Apple, force-policy=direct, update-interval=86400, opt-parser=false, enabled=true
# 微信
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/WeChat/WeChat.list, tag=📟微信, force-policy=direct, update-interval=86400, opt-parser=false, enabled=true
# 腾讯
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Tencent/Tencent.list, tag=🐧腾讯, force-policy=direct, update-interval=86400, opt-parser=false, enabled=true
# YouTube
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/YouTube/YouTube.list, tag=📺YouTube, force-policy=📺国际媒体, update-interval=86400, opt-parser=false, enabled=true
# Telegram
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Telegram/Telegram.list, tag=🌍Telegram, force-policy=🌍国外网站, update-interval=86400, opt-parser=false, enabled=true
# GitHub
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/GitHub/GitHub.list, tag=🌍GitHub, force-policy=🌍国外网站, update-interval=86400, opt-parser=false, enabled=true
# 国内网站
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/China/China.list, tag=🇨🇳国内网站, force-policy=direct, update-interval=86400, opt-parser=false, enabled=true
# 国内网站/IP合集
;https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/ChinaMax/ChinaMax.list, tag=🇨🇳国内网站/IP合集, force-policy=🇨🇳国内网站, update-interval=86400, opt-parser=false, enabled=true
# 国际媒体
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/GlobalMedia/GlobalMedia.list, tag=📺国际媒体, force-policy=📺国际媒体, update-interval=86400, opt-parser=false, enabled=true
# 国外网站
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Global/Global.list, tag=🌍国外网站, force-policy=🌍国外网站, update-interval=86400, opt-parser=false, enabled=true

[rewrite_remote]

# 复写远程订阅
# 远程复写模块，内包含主机名hostname以及复写rewrite规则
#支持本地/iCloud的复写规则文件，位于Quantumult X/Profiles路径下
;rewrite.txt, tag=本地复写, opt-parser=false, enabled=true

# Sub Store（订阅管理器）
;https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/config/QX.snippet, tag=Sub Store, update-interval=172800, opt-parser=false, enabled=true
# BoxJs
;https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.quanx.conf, tag=BoxJs, update-interval=172800, opt-parser=false, enabled=true

# 复写去广告(严格版)
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/QuantumultX/AdvertisingLite/AdvertisingLite.conf, tag=复写去广告(严格版), update-interval=86400, opt-parser=false, enabled=true
# 安全重定向
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/QuantumultX/SafeRedirect/SafeRedirect.conf, tag=安全重定向, update-interval=86400, opt-parser=false, enabled=true

[server_local]

# 本地服务器部分

# 只有 obfs=http, obfs=ws, obfs=ws, obfs=wss 可以有可选的「obfs-uri」字段。
# wss 中的 obfs-host 参数将用于 TLS 握手和 HTTP 头主机字段，如果没有为 wss 设置 obfs-host，则将使用服务器地址。
# 目前不支持 VMess 和 Trojan 的 UDP relay。
# 当使用 obfs=ws 和 obfs=wss 时，服务器端可以通过带有 mux=0 的 v2ray-plugin 或 v2ray-core 进行部署。
# obfs plugin tls1.2 ticket auth 比 tls1.2 ticket fastauth 和 obfs tls 多一个 RTT，你最好使用 tls1.2 ticket fastauth。
# chacha20-ietf-poly1305 和 chacha20-poly1305 在 VMess 配置中具有相同的效果。
# 可选字段 tls13 仅用于：shadowsocks obfs=wss / vmess obfs=over-tls and obfs=wss / http over-tls=true / trojan over-tls=true

# 完整示例请查看
# https://github.com/crossutility/Quantumult-X/blob/master/sample.conf

[filter_local]

# 本地分流规则

# 本地规则优先生效

# 如开启其他设置中的  “分流匹配优化” 选项，则匹配优先级如下：
# host > host-suffix > host-keyword(wildcard) > geoip = ip-cidr > user-agennt

# 完整域名匹配
;host, www.google.com, proxy

# 域名后缀匹配
;host-suffix, googleapis.com, proxy

# 强制分流走蜂窝网络
;host-suffix, googleapis.com, proxy, force-cellular
# 让分流走蜂窝网络和 Wi-Fi 中的优选结果
;host-suffix, googleapis.com, proxy, multi-interface
# 让分流走蜂窝网络跟 Wi-Fi 中的负载均衡，提供更大带宽出入接口
;host-suffix, googleapis.com, proxy, multi-interface-balance
# 指定分流走特定网络接口
;host-suffix, googleapis.com, proxy, via-interface=pdp_ip0

# 域名关键词匹配
;host-keyword, adsite, reject

# 域名通配符匹配
;host-wildcard, *.goo?le.com, proxy

# IP地址匹配
;ip6-cidr, 2001:4860:4860::8888/32, direct
;ip-cidr, 10.0.0.0/8, direct
# User-Agent 匹配
;user-agent, ?abc*, proxy

host-suffix, sentry.io, reject
host-suffix, local, direct
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 100.64.0.0/10, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 224.0.0.0/24, direct
ip-cidr, 183.232.159.17/24, direct
ip6-cidr, fe80::/10, direct

# geoip库
;geoip, cn, direct
;geoip, netflix, proxy
;geoip, cn, direct, force-cellular
;ip-asn, 6185, proxy

# 未命中远程&本地规则的剩余请求将使用final指定的节点/策略。
#
# final为必需规则，不可删除！
final, 🐟漏网之鱼
# final为必需规则，不可删除！

# 可添加以下域名关键词规则来跳过所有不匹配域名的 DNS 查询。 纯IP请求不会被域名相关规则匹配。
;host-keyword, ., proxy

[rewrite_local]

# 本地复写规则

# 完整示例请查看
# https://github.com/crossutility/Quantumult-X/blob/master/sample.conf

;^https?:\/\/api\.m\.jd\.com\/client\.action\?functionId=(queryTemplates|serverConfig)$ - script-request-header https://raw.githubusercontent.com/chiupam/surge/main/scripts/javascripts/wskey.js

[task_local]

# JS文件放于iCloud或者本机的Quantumult X/Scripts 路径下。
# 支持 5 或 6 个 cron 字段，不包括命令字段。
# 包含3种类型: cron 定时任务、UI交互脚本、网络切换脚本

;* * * * * sample-task.js

# 完整示例请查看
# https://github.com/crossutility/Quantumult-X/blob/master/sample.conf

[mitm]

# 证书&主机名

#
# 只有 “hostname” 中的TLS SNI或目标地址会被MitM处理。
#

# 在APP中生成证书并安装&信任，确保按提示操作！
# 默认情况下，当为 HTTPS 请求启用 MitM 时，Quantumult X 会从原站点获取证书（证书会被缓存），保留大部分需要的原始证书信息，并使用 MitM 的 root CA 重新签名，这是推荐的（也是比较兼容的）MitM 证书创建方式。

;skip_validating_cert = false
;force_sni_domain_name = false

# hostname 为主机名，用,分隔多个
;hostname = *.example.com, *.sample.com

#
# CA密钥和p12需要保密！
#
# CA密钥和p12需要保密！
#
# CA密钥和p12需要保密！
#

;passphrase =
;p12 =